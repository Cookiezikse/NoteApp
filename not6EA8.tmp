[gd_scene load_steps=7 format=3 uid="uid://b2iye25t0oe68"]

[ext_resource type="FontFile" uid="uid://llrtkffwfn7m" path="res://fonts/Nexa-Heavy.ttf" id="1_1riq5"]
[ext_resource type="LabelSettings" uid="uid://c8r4typ2336ah" path="res://fonts/header_text.tres" id="1_g2rpv"]
[ext_resource type="PackedScene" uid="uid://b1lmi1rpv1n58" path="res://Things/Buttons/home.tscn" id="1_g2xox"]
[ext_resource type="PackedScene" uid="uid://dlulv60jen6qn" path="res://Things/Buttons/leave.tscn" id="2_u6a40"]

[sub_resource type="GDScript" id="GDScript_jghmg"]
resource_name = "Note"
script/source = "extends Control

@onready var file = 'res://datas/datas.txt'

func load_json_file(filepath: String):
	if FileAccess.file_exists(filepath):
		var dataFile = FileAccess.open(filepath,FileAccess.READ)
		var parsedResult = JSON.parse_string(dataFile.get_as_text())
		if parsedResult is Dictionary:
			print(parsedResult)
			#return parsedResult
		else:
			print(\"Error reding file\")
	else:
		print(\"File doesn't exist !\")

func save_json_file(filepath: String, data):
	if FileAccess.file_exists(filepath):
		var dataFile = FileAccess.open(filepath,FileAccess.READ_WRITE)
		var json_data = JSON.stringify(data)
		dataFile.store_string(json_data)
	else:
		print(\"File doesn't exist !\")


func _ready():
	if global.id_clicked != null:
		var line = \"\"
		var f = FileAccess.open(\"datas/datas.txt\",FileAccess.READ)
		var index = 0
		while not f.eof_reached(): # iterate through all lines until the end of file is reached
			if index == global.id_clicked:
				line = f.get_line()
				break;
			index+=1
			f.get_line()
		f.close()
		if !line:
			line = \"Error/NoData\"
		$VBoxContainer/Note_text/ScrollContainer/PanelContainer/Label.text = line

	var data = {
	\"id\": global.id_clicked -10,
	\"text\": $VBoxContainer/Note_text/ScrollContainer/PanelContainer/Label.text
	}
	
	save_json_file(\"datas/datas.json\", data)
	load_json_file(\"datas/datas.json\")
	
	
	
	
	
	
		
	#var file = FileAccess.open(\"datas/datas.json\", FileAccess.READ)
	#var content_as_text = file.get_as_text()
	#if !content_as_text:
	#	print(\"ERROR\")
	#var content_as_dictionary = JSON.parse_string(content_as_text)
	#return content_as_dictionary
		
	
		
	#var json_data = JSON.stringify(data)
	#var json = JSON.new()
	
	#json.open(data,FileAccess.READ_WRITE)
	#var error = json.parse(json_data)
	#if error == OK:
	#	var data_received = json.data
	#	print(data_received)
	#	if data_received[\"id\"] == 0:
	#		print(data_received[\"id\"])
	#else:
	#	print(\"JSON Parse Error: \",json.get_error_message(), \" in \",json_data, \" at line \", json.get_error_line())
		
	



func _on_label_focus_exited():
	var f = FileAccess.open(\"datas/datas.txt\",FileAccess.READ_WRITE)
	if global.id_clicked != null:
		var index = 0
		while not f.eof_reached(): # iterate through all lines until the end of file is reached
			if index == global.id_clicked:
				#Le retour à la ligne fait que ça le met dans l'autre line !
				f.store_string($VBoxContainer/Note_text/ScrollContainer/PanelContainer/Label.text)
				break;
			index+=1
			f.get_line()
	else:
		f.seek_end()
		f.store_string($VBoxContainer/Note_text/ScrollContainer/PanelContainer/Label.text)
	f.close()

func save(data):
	var files = FileAccess.open(\"datas/datas.json\", FileAccess.WRITE)
	files.store_line(JSON.stringify(data))
	
func load():
	var files = FileAccess.open(\"datas/datas.json\",FileAccess.READ)
	var datasssss = JSON.parse_string(file.get_as_text())
	return datasssss
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_3v2nw"]
content_margin_left = 10.0
content_margin_top = 10.0
content_margin_right = 10.0
content_margin_bottom = 10.0
bg_color = Color(0.113725, 0.113725, 0.113725, 1)
corner_radius_top_left = 8
corner_radius_top_right = 8
corner_radius_bottom_right = 8
corner_radius_bottom_left = 8

[node name="Note" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_jghmg")

[node name="ColorRect" type="ColorRect" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.160784, 0.160784, 0.160784, 1)

[node name="VBoxContainer" type="VBoxContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Header" type="Control" parent="VBoxContainer"]
custom_minimum_size = Vector2(0, 100)
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="VBoxContainer/Header"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 36.0
offset_top = 16.0
offset_right = -41.0
grow_horizontal = 2
grow_vertical = 2

[node name="Label" parent="VBoxContainer/Header/HBoxContainer" instance=ExtResource("1_g2xox")]
layout_mode = 2

[node name="Label2" type="Label" parent="VBoxContainer/Header/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 6
text = "Date : XX YY ZZZZ"
label_settings = ExtResource("1_g2rpv")

[node name="Leave" parent="VBoxContainer/Header/HBoxContainer" instance=ExtResource("2_u6a40")]
layout_mode = 2

[node name="Note_text" type="Control" parent="VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3

[node name="ScrollContainer" type="ScrollContainer" parent="VBoxContainer/Note_text"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 33.0
offset_right = -42.0
grow_horizontal = 2
grow_vertical = 2

[node name="PanelContainer" type="PanelContainer" parent="VBoxContainer/Note_text/ScrollContainer"]
custom_minimum_size = Vector2(0, 100)
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_styles/panel = SubResource("StyleBoxFlat_3v2nw")

[node name="Label" type="TextEdit" parent="VBoxContainer/Note_text/ScrollContainer/PanelContainer"]
custom_minimum_size = Vector2(0, 100)
layout_mode = 2
theme_override_fonts/font = ExtResource("1_1riq5")
theme_override_font_sizes/font_size = 32
placeholder_text = "Start with some text !"
wrap_mode = 1

[connection signal="focus_exited" from="VBoxContainer/Note_text/ScrollContainer/PanelContainer/Label" to="." method="_on_label_focus_exited"]
